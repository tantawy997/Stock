// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stock.Context;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AppdbContext))]
    partial class AppdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CatalogProducts", b =>
                {
                    b.Property<Guid>("CatalogsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CatalogsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CatalogProducts");
                });

            modelBuilder.Entity("DAL.Models.Catalog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Catalogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0f8203f3-8717-4cdf-bf1f-588fbc13971d"),
                            Name = "John"
                        },
                        new
                        {
                            Id = new Guid("1fc5acb3-fcd0-45f2-b3ea-62e006eeab0c"),
                            Name = "James"
                        },
                        new
                        {
                            Id = new Guid("27880c8b-a53e-411b-a29b-328bf56905c2"),
                            Name = "Anderson"
                        });
                });

            modelBuilder.Entity("DAL.Models.ProductDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DefualtStock")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PurchasePrice")
                        .HasColumnType("real");

                    b.Property<float>("SalesPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ProductsId");

                    b.ToTable("ProductDetails");
                });

            modelBuilder.Entity("Stock.Models.Products", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c55a09c-bcc3-488d-9814-b43fc445dc1d"),
                            description = "",
                            name = "Cold",
                            photo = "",
                            type = "out of stock"
                        },
                        new
                        {
                            Id = new Guid("3cf3091e-485a-40b6-b4fd-b4ea2d730d63"),
                            description = "",
                            name = "Stress",
                            photo = "",
                            type = "out of stock"
                        },
                        new
                        {
                            Id = new Guid("83dff502-7c7d-4f27-83ed-d2eb25cbb3c6"),
                            description = "",
                            name = "Headache",
                            photo = "",
                            type = "out of stock"
                        });
                });

            modelBuilder.Entity("CatalogProducts", b =>
                {
                    b.HasOne("DAL.Models.Catalog", null)
                        .WithMany()
                        .HasForeignKey("CatalogsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock.Models.Products", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.ProductDetails", b =>
                {
                    b.HasOne("Stock.Models.Products", null)
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductsId");
                });

            modelBuilder.Entity("Stock.Models.Products", b =>
                {
                    b.Navigation("ProductDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
